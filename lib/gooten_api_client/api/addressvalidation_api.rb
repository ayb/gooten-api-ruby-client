=begin
Gooten API

An overview of the various API methods that Gooten offers, including examples of each.

OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git


=end

require "uri"

module GootenApiClient
  class AddressvalidationApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Validates an address and returns a suggested address (if available) and a validation score.
    # Validates an address and returns a suggested address (if available) and a validation score.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :line1 Address line1.
    # @option opts [String] :line2 Address line2.
    # @option opts [String] :city Address city.
    # @option opts [String] :state Address state.
    # @option opts [String] :postal_code Address postal code/zip.
    # @option opts [String] :country_code Address country code.
    # @return [Result]
    def addressvalidation(opts = {})
      data, status_code, headers = addressvalidation_with_http_info(opts)
      return data
    end

    # Validates an address and returns a suggested address (if available) and a validation score.
    # Validates an address and returns a suggested address (if available) and a validation score.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :line1 Address line1.
    # @option opts [String] :line2 Address line2.
    # @option opts [String] :city Address city.
    # @option opts [String] :state Address state.
    # @option opts [String] :postal_code Address postal code/zip.
    # @option opts [String] :country_code Address country code.
    # @return [Array<(Result, Fixnum, Hash)>] Result data, response status code and response headers
    def addressvalidation_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: AddressvalidationApi#addressvalidation ..."
      end
      
      # resource path
      local_var_path = "/addressvalidation/".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'line1'] = opts[:'line1'] if opts[:'line1']
      query_params[:'line2'] = opts[:'line2'] if opts[:'line2']
      query_params[:'city'] = opts[:'city'] if opts[:'city']
      query_params[:'state'] = opts[:'state'] if opts[:'state']
      query_params[:'postalCode'] = opts[:'postal_code'] if opts[:'postal_code']
      query_params[:'countryCode'] = opts[:'country_code'] if opts[:'country_code']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      _header_accept = ['application/json']
      _header_accept_result = @api_client.select_header_accept(_header_accept) and header_params['Accept'] = _header_accept_result

      # HTTP header 'Content-Type'
      _header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Result')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AddressvalidationApi#addressvalidation\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
