=begin
Gooten API


An overview of the various API methods that Gooten offers, including examples of each.


OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git




=end

require "uri"

module GootenApiClient

  class OrdersearchApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end


    # Search an orders
    # Search through the orders and return information about orders that match search criteria.
    # @param partner_billing_key Partner billing key
    # @param [Hash] opts the optional parameters
    # @option opts [String] :generic_values Any value which is related to order (partner name, address, phone, couponCode, etc...)
    # @option opts [String] :last_name Partner last name
    # @option opts [String] :email Partner email
    # @option opts [String] :postal_code Billing/Shipping address postal code
    # @option opts [String] :start_date Start date of the date range when order was created
    # @option opts [String] :end_date End date of the date range when order was created
    # @option opts [String] :unique_user_id User Id
    # @option opts [Integer] :partner_id Partner Id
    # @option opts [Integer] :page_size How many items to return in reponse.
    # @option opts [Integer] :page Page number, how many items to skip.
    # @return [SubmittedOrderList]
    def g_et_ordersearch(partner_billing_key, opts = {})
      data, status_code, headers = g_et_ordersearch_with_http_info(partner_billing_key, opts)
      return data
    end

    # Search an orders
    # Search through the orders and return information about orders that match search criteria.
    # @param partner_billing_key Partner billing key
    # @param [Hash] opts the optional parameters
    # @option opts [String] :generic_values Any value which is related to order (partner name, address, phone, couponCode, etc...)
    # @option opts [String] :last_name Partner last name
    # @option opts [String] :email Partner email
    # @option opts [String] :postal_code Billing/Shipping address postal code
    # @option opts [String] :start_date Start date of the date range when order was created
    # @option opts [String] :end_date End date of the date range when order was created
    # @option opts [String] :unique_user_id User Id
    # @option opts [Integer] :partner_id Partner Id
    # @option opts [Integer] :page_size How many items to return in reponse.
    # @option opts [Integer] :page Page number, how many items to skip.
    # @return [Array<(SubmittedOrderList, Fixnum, Hash)>] SubmittedOrderList data, response status code and response headers
    def g_et_ordersearch_with_http_info(partner_billing_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: OrdersearchApi#g_et_ordersearch ..."
      end
      
      # verify the required parameter 'partner_billing_key' is set
      fail "Missing the required parameter 'partner_billing_key' when calling g_et_ordersearch" if partner_billing_key.nil?
      
      # resource path
      local_var_path = "/ordersearch/".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'partnerBillingKey'] = partner_billing_key
      query_params[:'genericValues'] = opts[:'generic_values'] if opts[:'generic_values']
      query_params[:'lastName'] = opts[:'last_name'] if opts[:'last_name']
      query_params[:'email'] = opts[:'email'] if opts[:'email']
      query_params[:'postalCode'] = opts[:'postal_code'] if opts[:'postal_code']
      query_params[:'startDate'] = opts[:'start_date'] if opts[:'start_date']
      query_params[:'endDate'] = opts[:'end_date'] if opts[:'end_date']
      query_params[:'uniqueUserId'] = opts[:'unique_user_id'] if opts[:'unique_user_id']
      query_params[:'partnerId'] = opts[:'partner_id'] if opts[:'partner_id']
      query_params[:'pageSize'] = opts[:'page_size'] if opts[:'page_size']
      query_params[:'page'] = opts[:'page'] if opts[:'page']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      _header_accept = ['application/json']
      _header_accept_result = @api_client.select_header_accept(_header_accept) and header_params['Accept'] = _header_accept_result

      # HTTP header 'Content-Type'
      _header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SubmittedOrderList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: OrdersearchApi#g_et_ordersearch\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end

end
