=begin
Gooten API


An overview of the various API methods that Gooten offers, including examples of each.


OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git




=end

require "uri"

module GootenApiClient

  class PaymentvalidationApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end


    # Submit payment validation for PayPal
    # Submit payment validation for PayPal
    # @param order_id Order Id returned from orders/POST
    # @param pay_pal_key The PayPal key returned from the Mobile SDK
    # @param [Hash] opts the optional parameters
    # @return [PaymentValidationResponse]
    def paymentvalidation(order_id, pay_pal_key, opts = {})
      data, status_code, headers = paymentvalidation_with_http_info(order_id, pay_pal_key, opts)
      return data
    end

    # Submit payment validation for PayPal
    # Submit payment validation for PayPal
    # @param order_id Order Id returned from orders/POST
    # @param pay_pal_key The PayPal key returned from the Mobile SDK
    # @param [Hash] opts the optional parameters
    # @return [Array<(PaymentValidationResponse, Fixnum, Hash)>] PaymentValidationResponse data, response status code and response headers
    def paymentvalidation_with_http_info(order_id, pay_pal_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: PaymentvalidationApi#paymentvalidation ..."
      end
      
      # verify the required parameter 'order_id' is set
      fail "Missing the required parameter 'order_id' when calling paymentvalidation" if order_id.nil?
      
      # verify the required parameter 'pay_pal_key' is set
      fail "Missing the required parameter 'pay_pal_key' when calling paymentvalidation" if pay_pal_key.nil?
      
      # resource path
      local_var_path = "/paymentvalidation/".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'OrderId'] = order_id
      query_params[:'PayPalKey'] = pay_pal_key

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      _header_accept = ['application/json']
      _header_accept_result = @api_client.select_header_accept(_header_accept) and header_params['Accept'] = _header_accept_result

      # HTTP header 'Content-Type'
      _header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PaymentValidationResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PaymentvalidationApi#paymentvalidation\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end

end
