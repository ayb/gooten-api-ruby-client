=begin
Gooten API

An overview of the various API methods that Gooten offers, including examples of each.

OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git


=end

require "uri"

module GootenApiClient
  class ShippingpricesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Get a list of shipping options and prices for items
    # Get a list of shipping options and prices for items.
    # @param shipping_prices_request DTO with required information
    # @param [Hash] opts the optional parameters
    # @option opts [String] :partner_billing_key Partner billing key
    # @return [ShippingPricesResult]
    def p_ost_shippingprices(shipping_prices_request, opts = {})
      data, status_code, headers = p_ost_shippingprices_with_http_info(shipping_prices_request, opts)
      return data
    end

    # Get a list of shipping options and prices for items
    # Get a list of shipping options and prices for items.
    # @param shipping_prices_request DTO with required information
    # @param [Hash] opts the optional parameters
    # @option opts [String] :partner_billing_key Partner billing key
    # @return [Array<(ShippingPricesResult, Fixnum, Hash)>] ShippingPricesResult data, response status code and response headers
    def p_ost_shippingprices_with_http_info(shipping_prices_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ShippingpricesApi#p_ost_shippingprices ..."
      end
      
      # verify the required parameter 'shipping_prices_request' is set
      fail "Missing the required parameter 'shipping_prices_request' when calling p_ost_shippingprices" if shipping_prices_request.nil?
      
      # resource path
      local_var_path = "/shippingprices/".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'partnerBillingKey'] = opts[:'partner_billing_key'] if opts[:'partner_billing_key']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      _header_accept = ['application/json']
      _header_accept_result = @api_client.select_header_accept(_header_accept) and header_params['Accept'] = _header_accept_result

      # HTTP header 'Content-Type'
      _header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(shipping_prices_request)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ShippingPricesResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingpricesApi#p_ost_shippingprices\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
