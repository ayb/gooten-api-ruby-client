=begin
Gooten API

An overview of the various API methods that Gooten offers, including examples of each.

OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git


=end

require "uri"

module GootenApiClient
  class OrderstatusApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Update an order status
    # Update status of each order item.
    # @param partner_billing_key Partner billing key
    # @param id Order Id
    # @param order_status_name Order status name for update
    # @param [Hash] opts the optional parameters
    # @return [OrderStatusUpdateResult]
    def p_ost_orderstatus(partner_billing_key, id, order_status_name, opts = {})
      data, status_code, headers = p_ost_orderstatus_with_http_info(partner_billing_key, id, order_status_name, opts)
      return data
    end

    # Update an order status
    # Update status of each order item.
    # @param partner_billing_key Partner billing key
    # @param id Order Id
    # @param order_status_name Order status name for update
    # @param [Hash] opts the optional parameters
    # @return [Array<(OrderStatusUpdateResult, Fixnum, Hash)>] OrderStatusUpdateResult data, response status code and response headers
    def p_ost_orderstatus_with_http_info(partner_billing_key, id, order_status_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: OrderstatusApi#p_ost_orderstatus ..."
      end
      
      # verify the required parameter 'partner_billing_key' is set
      fail "Missing the required parameter 'partner_billing_key' when calling p_ost_orderstatus" if partner_billing_key.nil?
      
      # verify the required parameter 'id' is set
      fail "Missing the required parameter 'id' when calling p_ost_orderstatus" if id.nil?
      
      # verify the required parameter 'order_status_name' is set
      fail "Missing the required parameter 'order_status_name' when calling p_ost_orderstatus" if order_status_name.nil?
      
      # resource path
      local_var_path = "/orderstatus/".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'partnerBillingKey'] = partner_billing_key
      query_params[:'id'] = id
      query_params[:'orderStatusName'] = order_status_name

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      _header_accept = ['application/json']
      _header_accept_result = @api_client.select_header_accept(_header_accept) and header_params['Accept'] = _header_accept_result

      # HTTP header 'Content-Type'
      _header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OrderStatusUpdateResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: OrderstatusApi#p_ost_orderstatus\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
