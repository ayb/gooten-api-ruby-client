=begin


OpenAPI spec version: 1

Generated by: https://github.com/swagger-api/swagger-codegen.git


=end

require "uri"

module SwaggerClient
  class ShippriceestimateApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Get a baseline ship price for an item
    # Price returned is an estimate which may or may not be realistically attainable.
    # @param product_id Product ID
    # @param country_code Country Code it will be shipped to
    # @param [Hash] opts the optional parameters
    # @option opts [String] :currency_code Currency Code the estimate should be in. Defaults to USD.
    # @return [ShipEstimate]
    def get_shippriceestimate(product_id, country_code, opts = {})
      data, status_code, headers = get_shippriceestimate_with_http_info(product_id, country_code, opts)
      return data
    end

    # Get a baseline ship price for an item
    # Price returned is an estimate which may or may not be realistically attainable.
    # @param product_id Product ID
    # @param country_code Country Code it will be shipped to
    # @param [Hash] opts the optional parameters
    # @option opts [String] :currency_code Currency Code the estimate should be in. Defaults to USD.
    # @return [Array<(ShipEstimate, Fixnum, Hash)>] ShipEstimate data, response status code and response headers
    def get_shippriceestimate_with_http_info(product_id, country_code, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ShippriceestimateApi#get_shippriceestimate ..."
      end
      
      # verify the required parameter 'product_id' is set
      fail "Missing the required parameter 'product_id' when calling get_shippriceestimate" if product_id.nil?
      
      # verify the required parameter 'country_code' is set
      fail "Missing the required parameter 'country_code' when calling get_shippriceestimate" if country_code.nil?
      
      # resource path
      local_var_path = "/shippriceestimate/".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'productId'] = product_id
      query_params[:'countryCode'] = country_code
      query_params[:'currencyCode'] = opts[:'currency_code'] if opts[:'currency_code']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      _header_accept = ['application/json']
      _header_accept_result = @api_client.select_header_accept(_header_accept) and header_params['Accept'] = _header_accept_result

      # HTTP header 'Content-Type'
      _header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ShipEstimate')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippriceestimateApi#get_shippriceestimate\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
